package solution;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Backjoon11049 {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static int n;
	static int[][] matrix;
	static int[][] dp = new int[21][21]; // dp[s][e] s번째에서 e번째까지 행렬곱셈 연산 최솟값
	static int count = 0;
	// dp[s][e] = dp[s][i] + dp[i+1][e] + (matrix[s][0] * matrix[i][1] * matrix[e][1])
	// (matrix[s][0] * matrix[i][1] * matrix[e][1]) -> dp[s][i] * dp[i+1][e]의 연산 횟수
	
	public static void solution(int s, int e) {
		if(s==e) return 0;
	}
	
	public static void main(String[] args) {
		try {
			n = Integer.parseInt(br.readLine());
			matrix = new int[n+1][2];
			// matrix input
			for(int i=1;i<=n;i++) {
				StringTokenizer	st = new StringTokenizer(br.readLine());
				int x = Integer.parseInt(br.readLine());
				int y = Integer.parseInt(br.readLine());
				matrix[i][0] = x;
				matrix[i][1] = y;
			}
		} catch (NumberFormatException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}